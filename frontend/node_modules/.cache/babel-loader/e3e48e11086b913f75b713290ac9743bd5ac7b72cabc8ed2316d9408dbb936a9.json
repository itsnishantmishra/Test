{"ast":null,"code":"// src/api.js\nimport axios from 'axios';\n\n// Create axios instance with base URL\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token in every request if available\nAPI.interceptors.request.use(config => {\n  const userInfo = localStorage.getItem('userInfo');\n  if (userInfo) {\n    const {\n      token\n    } = JSON.parse(userInfo);\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","headers","interceptors","request","use","config","userInfo","localStorage","getItem","token","JSON","parse","Authorization","error","Promise","reject"],"sources":["/Users/nishant/Desktop/sledjeWeb/frontend/src/api.js"],"sourcesContent":["// src/api.js\nimport axios from 'axios';\n\n// Create axios instance with base URL\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to include auth token in every request if available\nAPI.interceptors.request.use(\n  (config) => {\n    const userInfo = localStorage.getItem('userInfo');\n    if (userInfo) {\n      const { token } = JSON.parse(userInfo);\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default API;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,IAAIF,QAAQ,EAAE;IACZ,MAAM;MAAEG;IAAM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;IACtC,IAAIG,KAAK,EAAE;MACTJ,MAAM,CAACJ,OAAO,CAACW,aAAa,GAAG,UAAUH,KAAK,EAAE;IAClD;EACF;EACA,OAAOJ,MAAM;AACf,CAAC,EACAQ,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}