{"ast":null,"code":"var _jsxFileName = \"/Users/nishant/Desktop/Sledge/sledgeNew/Test/frontend/src/pages/Utilities/SplitText.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { SplitText as GSAPSplitText } from \"gsap/SplitText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(ScrollTrigger, GSAPSplitText);\nconst SplitText = ({\n  text,\n  className = \"\",\n  delay = 100,\n  duration = 0.6,\n  ease = \"power3.out\",\n  splitType = \"chars\",\n  from = {\n    opacity: 0,\n    y: 40\n  },\n  to = {\n    opacity: 1,\n    y: 0\n  },\n  threshold = 0.1,\n  rootMargin = \"-100px\",\n  textAlign = \"center\",\n  onLetterAnimationComplete\n}) => {\n  _s();\n  const ref = useRef(null);\n  useEffect(() => {\n    const el = ref.current;\n    if (!el) return;\n    const absoluteLines = splitType === \"lines\";\n    if (absoluteLines) el.style.position = \"relative\";\n    const splitter = new GSAPSplitText(el, {\n      type: splitType,\n      absolute: absoluteLines,\n      linesClass: \"split-line\"\n    });\n    let targets;\n    switch (splitType) {\n      case \"lines\":\n        targets = splitter.lines;\n        break;\n      case \"words\":\n        targets = splitter.words;\n        break;\n      case \"words, chars\":\n        targets = [...splitter.words, ...splitter.chars];\n        break;\n      default:\n        targets = splitter.chars;\n    }\n    targets.forEach(t => {\n      t.style.willChange = \"transform, opacity\";\n    });\n    const startPct = (1 - threshold) * 100; // e.g. 0.1 -> 90%\n    const m = /^(-?\\d+)px$/.exec(rootMargin);\n    const raw = m ? parseInt(m[1], 10) : 0;\n    const sign = raw < 0 ? `-=${Math.abs(raw)}px` : `+=${raw}px`;\n    const start = `top ${startPct}%${sign}`;\n\n    // 5) Timeline with smoothChildTiming\n    const tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: el,\n        start,\n        toggleActions: \"play none none none\",\n        once: true\n      },\n      smoothChildTiming: true,\n      onComplete: onLetterAnimationComplete\n    });\n    tl.set(targets, {\n      ...from,\n      immediateRender: false,\n      force3D: true\n    });\n    tl.to(targets, {\n      ...to,\n      duration,\n      ease,\n      stagger: delay / 1000,\n      force3D: true\n    });\n    return () => {\n      tl.kill();\n      ScrollTrigger.getAll().forEach(t => t.kill());\n      gsap.killTweensOf(targets);\n      splitter.revert();\n    };\n  }, [text, delay, duration, ease, splitType, from, to, threshold, rootMargin, onLetterAnimationComplete]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    ref: ref,\n    className: `split-parent ${className}`,\n    style: {\n      textAlign,\n      overflow: \"hidden\",\n      display: \"inline-block\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\"\n    },\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitText, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = SplitText;\nexport default SplitText;\nvar _c;\n$RefreshReg$(_c, \"SplitText\");","map":{"version":3,"names":["useRef","useEffect","gsap","ScrollTrigger","SplitText","GSAPSplitText","jsxDEV","_jsxDEV","registerPlugin","text","className","delay","duration","ease","splitType","from","opacity","y","to","threshold","rootMargin","textAlign","onLetterAnimationComplete","_s","ref","el","current","absoluteLines","style","position","splitter","type","absolute","linesClass","targets","lines","words","chars","forEach","t","willChange","startPct","m","exec","raw","parseInt","sign","Math","abs","start","tl","timeline","scrollTrigger","trigger","toggleActions","once","smoothChildTiming","onComplete","set","immediateRender","force3D","stagger","kill","getAll","killTweensOf","revert","overflow","display","whiteSpace","wordWrap","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nishant/Desktop/Sledge/sledgeNew/Test/frontend/src/pages/Utilities/SplitText.js"],"sourcesContent":["import { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { SplitText as GSAPSplitText } from \"gsap/SplitText\";\n\ngsap.registerPlugin(ScrollTrigger, GSAPSplitText);\n\nconst SplitText = ({\n  text,\n  className = \"\",\n  delay = 100,\n  duration = 0.6,\n  ease = \"power3.out\",\n  splitType = \"chars\",\n  from = { opacity: 0, y: 40 },\n  to = { opacity: 1, y: 0 },\n  threshold = 0.1,\n  rootMargin = \"-100px\",\n  textAlign = \"center\",\n  onLetterAnimationComplete,\n}) => {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    const el = ref.current;\n    if (!el) return;\n\n    const absoluteLines = splitType === \"lines\";\n    if (absoluteLines) el.style.position = \"relative\";\n\n    const splitter = new GSAPSplitText(el, {\n      type: splitType,\n      absolute: absoluteLines,\n      linesClass: \"split-line\",\n    });\n\n    let targets;\n    switch (splitType) {\n      case \"lines\":\n        targets = splitter.lines;\n        break;\n      case \"words\":\n        targets = splitter.words;\n        break;\n      case \"words, chars\":\n        targets = [...splitter.words, ...splitter.chars];\n        break;\n      default:\n        targets = splitter.chars;\n    }\n\n    targets.forEach((t) => {\n      (t).style.willChange = \"transform, opacity\";\n    });\n\n    const startPct = (1 - threshold) * 100; // e.g. 0.1 -> 90%\n    const m = /^(-?\\d+)px$/.exec(rootMargin);\n    const raw = m ? parseInt(m[1], 10) : 0;\n    const sign = raw < 0 ? `-=${Math.abs(raw)}px` : `+=${raw}px`;\n    const start = `top ${startPct}%${sign}`;\n\n    // 5) Timeline with smoothChildTiming\n    const tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: el,\n        start,\n        toggleActions: \"play none none none\",\n        once: true,\n      },\n      smoothChildTiming: true,\n      onComplete: onLetterAnimationComplete,\n    });\n\n    tl.set(targets, { ...from, immediateRender: false, force3D: true });\n    tl.to(targets, {\n      ...to,\n      duration,\n      ease,\n      stagger: delay / 1000,\n      force3D: true,\n    });\n\n    return () => {\n      tl.kill();\n      ScrollTrigger.getAll().forEach((t) => t.kill());\n      gsap.killTweensOf(targets);\n      splitter.revert();\n    };\n  }, [\n    text,\n    delay,\n    duration,\n    ease,\n    splitType,\n    from,\n    to,\n    threshold,\n    rootMargin,\n    onLetterAnimationComplete,\n  ]);\n\n  return (\n    <p\n      ref={ref}\n      className={`split-parent ${className}`}\n      style={{\n        textAlign,\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        whiteSpace: \"normal\",\n        wordWrap: \"break-word\",\n      }}\n    >\n      {text}\n    </p>\n  );\n};\n\nexport default SplitText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}