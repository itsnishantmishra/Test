{"ast":null,"code":"var _jsxFileName = \"/Users/nishant/Desktop/sledgeNew/Test/frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { User, Building2, Users, Mail, Lock, Phone, MapPin, FileText, Eye, EyeOff } from 'lucide-react';\nimport API from '../api'; // Adjust the import path as necessary\nimport { useNavigate } from 'react-router-dom'; // Assuming you're using react-router for navigation\nimport { useAuth } from '../components/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [activeTab, setActiveTab] = useState('login');\n  const [userType, setUserType] = useState('retailers');\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n  const navigate = useNavigate();\n  const {\n    login: authLogin\n  } = useAuth(); // Destructure the login function with a renamed alias\n  const [location, setLocation] = useState(\"\");\n  useEffect(() => {\n    const devBypassLogin = () => {\n      if (process.env.NODE_ENV !== \"development\") return; // Only allow in development\n\n      const fakeUser = {\n        _id: \"dev123\",\n        email: \"dev@bypass.com\",\n        name: \"Dev User\",\n        role: userType\n      };\n      {\n        process.env.NODE_ENV === \"development\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: devBypassLogin,\n          className: \"text-sm text-blue-500 hover:underline mt-4\",\n          children: \"\\uD83D\\uDD13 Dev Bypass Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      }\n\n      // Call auth context login with fake user\n      authLogin({\n        user: fakeUser\n      });\n\n      // Navigate to the right dashboard\n      navigate(userType === 'retailers' ? '/retailer' : '/distributor');\n    };\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const coords = `${position.coords.latitude},${position.coords.longitude}`;\n        setLocation(coords);\n      }, error => {\n        console.error(\"Error fetching location:\", error);\n        alert(\"Please enable location services to auto-fill location.\");\n      });\n    } else {\n      alert(\"Geolocation is not supported by your browser\");\n    }\n  }, []);\n\n  // Login form state\n  const [loginData, setLoginData] = useState({\n    email: '',\n    password: ''\n  });\n\n  // Registration form state\n  const [registerData, setRegisterData] = useState({\n    businessName: '',\n    CompanyName: '',\n    ownerName: '',\n    email: '',\n    password: '',\n    phone: '',\n    gstNumber: '',\n    businessType: '',\n    pincode: '',\n    location: '' // Use the fetched location\n  });\n  const userTypes = [{\n    id: 'retailers',\n    label: 'Retailers',\n    icon: Building2\n  }, {\n    id: 'distributors',\n    label: 'Distributors',\n    icon: Users\n  }, {\n    id: 'partners',\n    label: 'Partners',\n    icon: User\n  }];\n  const businessTypes = ['Retail Store', 'Wholesale', 'E-commerce', 'Manufacturing', 'Distribution', 'Service Provider', 'Other'];\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent form submission if used in a form\n    setLoading(true);\n    setMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      const endpoint = userType === 'retailers' ? '/retailers/login' : '/distributors/login';\n      const response = await API.post(endpoint, {\n        email: loginData.email,\n        password: loginData.password\n      });\n      setMessage({\n        type: 'success',\n        text: 'Login successful'\n      });\n      console.log('Login response:', response.data);\n\n      // Call the auth context login function with response data if needed\n      if (authLogin) {\n        authLogin({\n          user: response.data\n        }); // Pass user data to context\n      }\n\n      // Navigate to appropriate dashboard\n      navigate(userType === 'retailers' ? '/retailer' : '/distributor');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Invalid credentials';\n      setMessage({\n        type: 'error',\n        text: errorMessage\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault(); // Prevent form submission if used in a form\n    setLoading(true);\n    setMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      let endpoint, payload;\n      if (userType === 'retailers') {\n        endpoint = '/retailers/register';\n        payload = {\n          businessName: registerData.businessName,\n          ownerName: registerData.ownerName,\n          email: registerData.email,\n          password: registerData.password,\n          phone: registerData.phone,\n          gstNumber: registerData.gstNumber,\n          businessType: registerData.businessType,\n          pincode: registerData.pincode,\n          location: location || registerData.location\n        };\n      } else {\n        endpoint = '/distributors/register';\n        payload = {\n          CompanyName: registerData.CompanyName,\n          ownerName: registerData.ownerName,\n          email: registerData.email,\n          password: registerData.password,\n          phone: registerData.phone,\n          gstNumber: registerData.gstNumber,\n          businessType: registerData.businessType,\n          pincode: registerData.pincode,\n          location: location || registerData.location\n        };\n      }\n      await API.post(endpoint, payload);\n      alert('Registration successful!');\n      // Optionally, you can redirect to login or dashboard page  \n\n      setMessage({\n        type: 'success',\n        text: 'Account created successfully'\n      });\n\n      // Reset form data\n      setRegisterData({\n        businessName: '',\n        CompanyName: '',\n        ownerName: '',\n        email: '',\n        password: '',\n        phone: '',\n        gstNumber: '',\n        businessType: '',\n        pincode: '',\n        location: ''\n      });\n\n      // Switch to login tab after successful registration\n      setTimeout(() => {\n        setActiveTab('login');\n        setMessage({\n          type: '',\n          text: ''\n        });\n      }, 1500);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      setMessage({\n        type: 'error',\n        text: errorMessage\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = (form, field, value) => {\n    if (form === 'login') {\n      setLoginData(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    } else {\n      setRegisterData(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n  const isLoginFormValid = () => {\n    return loginData.email.trim() !== '' && loginData.password.trim() !== '';\n  };\n  const isRegisterFormValid = () => {\n    const requiredFields = ['ownerName', 'email', 'password', 'phone'];\n    const businessNameField = userType === 'retailers' ? 'businessName' : 'CompanyName';\n    requiredFields.push(businessNameField);\n    return requiredFields.every(field => registerData[field].trim() !== '');\n  };\n}\n_s(Login, \"oAuQwKIxT82lxqnuH9+CfZsZ1aA=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","User","Building2","Users","Mail","Lock","Phone","MapPin","FileText","Eye","EyeOff","API","useNavigate","useAuth","jsxDEV","_jsxDEV","Login","_s","activeTab","setActiveTab","userType","setUserType","showPassword","setShowPassword","loading","setLoading","message","setMessage","type","text","navigate","login","authLogin","location","setLocation","devBypassLogin","process","env","NODE_ENV","fakeUser","_id","email","name","role","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","user","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","console","alert","loginData","setLoginData","password","registerData","setRegisterData","businessName","CompanyName","ownerName","phone","gstNumber","businessType","pincode","userTypes","id","label","icon","businessTypes","handleLogin","e","preventDefault","endpoint","response","post","log","data","_error$response","_error$response$data","errorMessage","handleRegister","payload","setTimeout","_error$response2","_error$response2$data","handleInputChange","form","field","value","prev","isLoginFormValid","trim","isRegisterFormValid","requiredFields","businessNameField","push","every","_c","$RefreshReg$"],"sources":["/Users/nishant/Desktop/sledgeNew/Test/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState ,useEffect} from 'react';\nimport { User, Building2, Users, Mail, Lock, Phone, MapPin, FileText, Eye, EyeOff } from 'lucide-react';\nimport API from '../api'; // Adjust the import path as necessary\nimport { useNavigate } from 'react-router-dom'; // Assuming you're using react-router for navigation\nimport { useAuth } from '../components/AuthContext';\n\nexport default function Login() {\n  const [activeTab, setActiveTab] = useState('login');\n  const [userType, setUserType] = useState('retailers');\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const navigate = useNavigate();\n  const { login: authLogin } = useAuth(); // Destructure the login function with a renamed alias\n  const [location, setLocation] = useState(\"\");\n  \n      useEffect(() => {\n\n        const devBypassLogin = () => {\n        if (process.env.NODE_ENV !== \"development\") return; // Only allow in development\n\n        const fakeUser = {\n          _id: \"dev123\",\n          email: \"dev@bypass.com\",\n          name: \"Dev User\",\n          role: userType,\n        };\n        {process.env.NODE_ENV === \"development\" && (\n          <button\n            onClick={devBypassLogin}\n            className=\"text-sm text-blue-500 hover:underline mt-4\"\n          >\n            🔓 Dev Bypass Login\n          </button>\n)}\n\n        // Call auth context login with fake user\n        authLogin({ user: fakeUser });\n\n        // Navigate to the right dashboard\n        navigate(userType === 'retailers' ? '/retailer' : '/distributor');\n      };\n\n        \n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const coords = `${position.coords.latitude},${position.coords.longitude}`;\n          setLocation(coords);\n        },\n        (error) => {\n          console.error(\"Error fetching location:\", error);\n          alert(\"Please enable location services to auto-fill location.\");\n        }\n      );\n    } else {\n      alert(\"Geolocation is not supported by your browser\");\n    }\n  }, []);\n\n  // Login form state\n  const [loginData, setLoginData] = useState({\n    email: '',\n    password: ''\n  });\n\n  // Registration form state\n  const [registerData, setRegisterData] = useState({\n    businessName: '',\n    CompanyName: '',\n    ownerName: '',\n    email: '',\n    password: '',\n    phone: '',\n    gstNumber: '',\n    businessType: '',\n    pincode: '',\n    location: '' // Use the fetched location\n  });\n\n  const userTypes = [\n    { id: 'retailers', label: 'Retailers', icon: Building2 },\n    { id: 'distributors', label: 'Distributors', icon: Users },\n    { id: 'partners', label: 'Partners', icon: User }\n  ];\n\n  const businessTypes = [\n    'Retail Store', 'Wholesale', 'E-commerce', 'Manufacturing', \n    'Distribution', 'Service Provider', 'Other'\n  ];\n\n  const handleLogin = async (e) => {\n    e.preventDefault(); // Prevent form submission if used in a form\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      const endpoint = userType === 'retailers' ? '/retailers/login' : '/distributors/login';\n      const response = await API.post(endpoint, {\n        email: loginData.email,\n        password: loginData.password\n      });\n      \n      setMessage({ type: 'success', text: 'Login successful' });\n      console.log('Login response:', response.data);\n      \n      // Call the auth context login function with response data if needed\n      if (authLogin) {\n        authLogin({ user: response.data }); // Pass user data to context\n      }\n      \n      // Navigate to appropriate dashboard\n      navigate(userType === 'retailers' ? '/retailer' : '/distributor');\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Invalid credentials';\n      setMessage({ type: 'error', text: errorMessage });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault(); // Prevent form submission if used in a form\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      let endpoint, payload;\n      \n      if (userType === 'retailers') {\n        endpoint = '/retailers/register';\n        payload = {\n          businessName: registerData.businessName,\n          ownerName: registerData.ownerName,\n          email: registerData.email,\n          password: registerData.password,\n          phone: registerData.phone,\n          gstNumber: registerData.gstNumber,\n          businessType: registerData.businessType,\n          pincode: registerData.pincode,\n          location: location || registerData.location,\n        };\n      } else {\n        endpoint = '/distributors/register';\n        payload = {\n          CompanyName: registerData.CompanyName,\n          ownerName: registerData.ownerName,\n          email: registerData.email,\n          password: registerData.password,\n          phone: registerData.phone,\n          gstNumber: registerData.gstNumber,\n          businessType: registerData.businessType,\n          pincode: registerData.pincode,\n          location: location || registerData.location,\n        };\n      }\n\n      await API.post(endpoint, payload);\n      alert('Registration successful!');\n      // Optionally, you can redirect to login or dashboard page  \n      \n      setMessage({ type: 'success', text: 'Account created successfully' });\n      \n      // Reset form data\n      setRegisterData({\n        businessName: '',\n        CompanyName: '',\n        ownerName: '',\n        email: '',\n        password: '',\n        phone: '',\n        gstNumber: '',\n        businessType: '',\n        pincode: '',\n        location: ''\n      });\n      \n      // Switch to login tab after successful registration\n      setTimeout(() => {\n        setActiveTab('login');\n        setMessage({ type: '', text: '' });\n      }, 1500);\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Registration failed';\n      setMessage({ type: 'error', text: errorMessage });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (form, field, value) => {\n    if (form === 'login') {\n      setLoginData(prev => ({ ...prev, [field]: value }));\n    } else {\n      setRegisterData(prev => ({ ...prev, [field]: value }));\n    }\n  };\n\n  const isLoginFormValid = () => {\n    return loginData.email.trim() !== '' && loginData.password.trim() !== '';\n  };\n\n  const isRegisterFormValid = () => {\n    const requiredFields = ['ownerName', 'email', 'password', 'phone'];\n    const businessNameField = userType === 'retailers' ? 'businessName' : 'CompanyName';\n    requiredFields.push(businessNameField);\n    \n    return requiredFields.every(field => registerData[field].trim() !== '');\n  };\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}